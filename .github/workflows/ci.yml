name: ci

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*' # Trigger on semantic versioning tags
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  # lint:
  #   name: Lint and Format Check
  #   runs-on: ubuntu-latest
  #   permissions: 
  #     contents: read
  #   steps:
  #     - uses: actions/checkout@v4
  #     - uses: actions/setup-go@v5
  #       with:
  #         go-version: stable
  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@v6
  #       with:
  #         version: v1.60

  # security:
  #     name: Security Scanning
  #     runs-on: ubuntu-latest
  #     permissions:
  #       contents: read
  #     env:
  #       GO111MODULE: on
  #     steps:
  #       - name: Checkout Source
  #         uses: actions/checkout@v4
  #       - name: Run Gosec Security Scanner
  #         uses: securego/gosec@master
  #         with:
  #           args: -exclude=G301, G304, G306 
  
  build:
    name: Build for Linux AMD64 and ARM
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: [amd64, arm64] # Target architectures
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.20' # Adjust to your Go version if needed

      - name: Cache Go modules
        uses: actions/cache@v3
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Build binary
        run: |
          GOOS=linux GOARCH=${{ matrix.goarch }} go build -o dist/vermilion-${{ matrix.goarch }} main.go

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: vermilion-${{ matrix.goarch }}
          path: dist/vermilion-${{ matrix.goarch }}